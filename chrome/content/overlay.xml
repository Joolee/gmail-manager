<?xml version="1.0" encoding="UTF-8"?>

<!-- 
  Gmail Manager
  By Todd Long <longfocus@gmail.com>
  http://www.longfocus.com/firefox/gmanager/
  /* vim: set noet sw=4 tab=4 : */
 -->

<bindings xmlns="http://www.mozilla.org/xbl"
		xmlns:xbl="http://www.mozilla.org/xbl"
		xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
		
	<binding id="gmanager-account-info">
		<content context="_child"
				 tooltip="gmanager-toolbar-tooltip"
				 hidden="true"
				 icontype="gmail"
				 status="logged-out"
				 onclick="gmanager_ToolbarClick.click(event);">
			<xul:hbox align="center">
				<xul:image class="gmanager-icon"
						xbl:inherits="iconsize,icontype,status,newMail"/>
						
				<xul:label class="gmanager-unread"
						value=""
						xbl:inherits="value=unread"/>
						
				<xul:label class="gmanager-alias"
						value=""
						xbl:inherits="value=alias"/>
			</xul:hbox>
			<xul:menupopup position="after_start"
						   onclick="event.stopPropagation();"
						   onpopupshowing="return gmanager_ToolbarMenu.buildMenu(this);"/>
		</content>
		
		<implementation>
			<constructor>
				var self = this;
				document.documentElement
				        .addEventListener(gmanager_Accounts.NOTIFY_STATE,
										  function(e) self._onNotifyState(e),
										  false);
				
				var tooltip = document.getAnonymousElementByAttribute(this, "anonid", "tooltip");
				if (tooltip) {
					this.removeChild(tooltip);
					this.appendChild(tooltip);
				}
			</constructor>
			<property name="account"
					onget="return this._account;">
					
				<setter>
				  <![CDATA[
				    this._account = val;
				    this.setAttribute("id",
									  "gmanager-toolbar-panel-" + val.email);
				    this.updatePosition();
				  ]]>
				</setter>
			</property>
			
			<property name="displayAccount"
					onget="return this._displayAccount;">
					
				<setter>
				  <![CDATA[
				    this._displayAccount = val;
				    this.updateDisplay();
				  ]]>
				</setter>
			</property>
			
			<method name="updateDisplay">
				<body>
				  <![CDATA[
				    if (this._displayAccount)
				    {
				      var unread = this._displayAccount.unread;
				      
				      this.setAttribute("icontype", this._displayAccount.type);
				      this.setAttribute("status", gmanager_Utils.toStyleStatus(this._displayAccount.status));
				      this.setAttribute("newMail", unread > 0 ? "true" : "false");
				      this.setAttribute("unread", !this._displayAccount.getBoolPref("toolbar-account-hide-unread-count") && this._displayAccount.loggedIn ? unread : "");
				      this.setAttribute("alias", !this._displayAccount.getBoolPref("toolbar-account-hide-alias") ? gmanager_Utils.toUnicode(this._displayAccount.alias) : "");
				    }
				  ]]>
				</body>
			</method>
			
			<method name="updatePosition">
				<body>
				  <![CDATA[
				    if (this._account)
				    {
					  var toolbox = document.getElementById("navigator-toolbox");
					  toolbox.palette.appendChild(this);
				      var isToolbarDisplay = this._account.getBoolPref("toolbar-display");
				      
				      if (isToolbarDisplay)
				      {
						var toolbarid = this._account.getCharPref("toolbar-toolbar-id");
						if (toolbarid == "status-bar")
						{
							// transition to addon-bar for firefox 4
							toolbarid = "addon-bar";
						}
				        var toolbar = document.getElementById(toolbarid);
				        var toolbarPosition = this._account.getIntPref("toolbar-specific-position");
				        
				        if (toolbar === null)
				          toolbar = document.getElementById("addon-bar");
						
				        
						var placement = this._account.getCharPref("toolbar-placement");
						if (placement == "always-last")
						{
							// always-last - insert at the end
							toolbar.insertItem(this.id, null, false);
						}
						else if (/^\d+$/.test(placement))
						{
							// insert based on numerical index...
							toolbar.insertItem(this.id, toolbar.childNodes[toolbarPosition]);
						}
						else
						{
							// insert based on id of element
							Components.utils.reportError("not yet handling toolbar [" + placement + "]")
						}
				      }
				      
				      this.setAttribute("hidden", !isToolbarDisplay);
				    }
				  ]]>
				</body>
			</method>
			<method name="_onNotifyState">
				<parameter name="event"/>
				<body>
				<![CDATA[
					// This is a forwarded gmanager_Accounts.NOTIFY_STATE observer
					// notification, with data:
					//    email|status (e.g. longfocus@gmail.com|10)
					var email = event.getData("data").split("|")[0];
	
					if (this._displayAccount && this._displayAccount.email == email)
					  this.updateDisplay();
				]]>
				</body>
			</method>
		</implementation>
	</binding>
	
	<binding id="gmanager-toolbar-menuitem"
			extends="chrome://global/content/bindings/menu.xml#menuitem">
			
		<content type="radio">
			<xul:hbox class="menu-iconic-left"
					align="center"
					pack="center"
					xbl:inherits="selected,checked">
					
				<xul:image class="menu-iconic-icon"
						xbl:inherits="src=image"/>
			</xul:hbox>
			
			<xul:label class="menu-iconic-text"
					flex="1"
					xbl:inherits="value=alias"/>
					
			<xul:label xbl:inherits="value=unread"/>
			
			<xul:image class="gmanager-icon"
					iconsize="small"
					xbl:inherits="icontype,status,newMail"/>
		</content>
	</binding>
</bindings>